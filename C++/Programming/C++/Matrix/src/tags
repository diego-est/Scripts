!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/Michorron/Scripts/C++/Matrix/src/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
Matrix	main.cpp	/^	Matrix(sz r, sz c) : data(vi(r * c, 0)), cols(c), rows(r)$/;"	f	struct:Matrix	file:
Matrix	main.cpp	/^struct Matrix {$/;"	s	file:
cols	main.cpp	/^	sz cols;$/;"	m	struct:Matrix	typeref:typename:sz	file:
data	main.cpp	/^	vi data;$/;"	m	struct:Matrix	typeref:typename:vi	file:
get_col	main.cpp	/^	vi get_col(sz c) const$/;"	f	struct:Matrix	typeref:typename:vi	file:
get_row	main.cpp	/^	vi get_row(sz r) const$/;"	f	struct:Matrix	typeref:typename:vi	file:
ii	main.cpp	/^typedef pair<u64, u64> ii;$/;"	t	typeref:typename:pair<u64,u64>	file:
main	main.cpp	/^auto main() -> int$/;"	f	typeref:typename:int
operator ()	main.cpp	/^	u64 operator()(sz r, sz c) const$/;"	f	struct:Matrix	typeref:typename:u64	file:
operator ()	main.cpp	/^	u64& operator()(sz r, sz c)$/;"	f	struct:Matrix	typeref:typename:u64 &	file:
operator *	main.cpp	/^	Matrix operator*(const Matrix& rhs) const$/;"	f	struct:Matrix	typeref:typename:Matrix	file:
operator *=	main.cpp	/^	void operator *= (const Matrix& rhs)$/;"	f	struct:Matrix	typeref:typename:void	file:
operator []	main.cpp	/^	u64& operator[](sz i)$/;"	f	struct:Matrix	typeref:typename:u64 &	file:
print	main.cpp	/^	void print() const$/;"	f	struct:Matrix	typeref:typename:void	file:
print	main.cpp	/^auto print(auto x)$/;"	f	typeref:typename:auto
println	main.cpp	/^auto println(auto x)$/;"	f	typeref:typename:auto
rows	main.cpp	/^	sz rows;$/;"	m	struct:Matrix	typeref:typename:sz	file:
sz	main.cpp	/^typedef size_t sz;$/;"	t	typeref:typename:size_t	file:
u64	main.cpp	/^typedef uint64_t u64;$/;"	t	typeref:typename:uint64_t	file:
vi	main.cpp	/^typedef vector<u64> vi;$/;"	t	typeref:typename:vector<u64>	file:
vii	main.cpp	/^typedef vector<pair<u64, u64>> vii;$/;"	t	typeref:typename:vector<pair<u64,u64>>	file:
vvi	main.cpp	/^typedef vector<vector<u64>> vvi;$/;"	t	typeref:typename:vector<vector<u64>>	file:
